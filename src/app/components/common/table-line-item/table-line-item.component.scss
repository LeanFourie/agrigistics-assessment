/*** IMPORTS ***/
// Use
@use './../../../styles/utils/functions' as func;
@use './../../../styles/utils/mixins' as mixin;

/*** MIXINS ***/
@mixin cellIconColorStyle-scoped( $iconColor ) {
    .row {
        &__column {
            &-cell {
                &--icon {
                    base-icon {
                        color: func.color( $iconColor );
                    }
                }
            }
        }
    }
}

/*** STYLES ***/
// Host
:host {
    display: contents;

    &:not( :last-child ) {
        .row {
            @include mixin.maxWidth( lg ) {
                padding: 0 0 func.pxToRem( 40 );
            }
        }
    }

    &:nth-last-child( 2 ) {
        .row {
            padding: 0;

            &__column {
                border-color: func.color( primaryColor-500 );

                @include mixin.maxWidth( lg ) {
                    &:not( :last-child ) {
                        border-color: func.color( greyColor-100 );
                    }
                }
            }
        }
    }
}

// Component
.row {
    // Media Queries
    @include mixin.minWidth( lg ) {
        height: func.pxToRem( 52 );
        display: table-row;
    }

    // Children
    &__column {
        padding: func.pxToRem( 16 );
        border-bottom: func.pxToRem( 1 ) solid func.color( greyColor-100 );

        // Media Queries
        @include mixin.minWidth( lg ) {
            display: table-cell;
            vertical-align: middle;
            padding: 0 func.pxToRem( 16 );
        }

        &-cell {
            // Mixins
            @include mixin.flexCenter( space-between );

            // Styles
            position: relative;

            // Media Queries
            @include mixin.maxWidth( lg ) {
                &::before {
                    font-size: func.pxToRem( 14 );
                    content: attr( data-title );
                }
            }

            // Variants
            &--icon {
                ::ng-deep {
                    .icon {
                        width: func.pxToRem( 24 );

                        &__element {
                            width: func.pxToRem( 24 );
                            font-size: func.pxToRem( 24 );
                        }
                    }

                    .tooltip {
                        left: func.pxToRem( 12 );
                        z-index: 9;
                    }
                }
            }

            // States
            &:hover {
                .row {
                    &__column {
                        &-action {
                            &--sort {
                                opacity: 1;
                            }
                        }
                    }
                }
            }
        }

        &-action {
            // Mixins
            @include mixin.borderRadiusRound();
            @include mixin.flexCenter();
            @include mixin.transform( translateY( func.pxToRem( -2 ) ) );
            @include mixin.transition(
                all
                func.duration( fast )
                func.easing( easeOutQuint )
            );
    
            // Styles
            width: func.pxToRem( 36 );
            height: func.pxToRem( 36 );
            padding: func.pxToRem( 8 );
            background: func.color( transparentColor );
            border: none;
            color: func.color( greyColor-200 );
            cursor: pointer;
    
            // States
            &:hover {
                background: func.alphaColor( primaryColor-500, .1 );
                color: func.color( primaryColor-500 );
            }

            &:active {
                background: func.alphaColor( primaryColor-500, .15 );
                color: func.color( primaryColor-600 );
            }
    
            ::ng-deep {
                .icon {

                    &__element {
                        font-size: func.pxToRem( 20 );
                    }
                }
            }

            &--sort {
                margin: 0 auto 0 func.pxToRem( 4 );
                opacity: 0;
            }

            &--is {
                &-visible {
                    &.row {
                        &__column {
                            &-action {
                                &--sort {
                                    opacity: 1;
                                }
                            }
                        }
                    }
                }
            }

            &--sort {
                &-asc,
                &-desc {
                    &.row {
                        &__column {
                            &-action {
                                &--sort {
                                    opacity: 1;

                                    &:not( :hover ) {
                                        color: func.color( greyColor-500 );
                                    }
                                }
                            }
                        }
                    }
                }

                &-desc {
                    &.row {
                        &__column {
                            &-action {
                                &--sort {
                                    @include mixin.transform( rotate( 180deg ) );
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    // Status
    &--status {
        &-production {
            @include cellIconColorStyle-scoped( infoColor-500 );
        }

        &-area {
            @include cellIconColorStyle-scoped( secondaryColor-500 );
        }

        &-complete {
            @include cellIconColorStyle-scoped( greyColor-500 );
        }
    }

    // Is...
    &--is {
        &-titles-row {
            .row {
                &__column {
                    color: func.color( greyColor-500 );

                    ::ng-deep {
                        .text {
                            &__element {
                                font-weight: 500;
                            }
                        }
                    }
                }
            }
        }
    }
}
